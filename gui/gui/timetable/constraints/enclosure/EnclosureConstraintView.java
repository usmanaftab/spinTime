/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EnclosureConstraintView.java
 *
 * Created on Feb 28, 2010, 7:20:49 PM
 */
package gui.timetable.constraints.enclosure;

import business.timetable.Entity;
import business.timetable.constraints.ConstraintMultiValProperty;
import business.timetable.constraints.ConstraintType;
import business.timetable.constraints.ConstraintTypeOperator;
import com.timetable.BasicException;
import com.timetable.gui.JMessageDialog;
import com.timetable.gui.MessageInf;
import gui.timetable.AppView;
import gui.timetable.constraints.Constraint;
import gui.timetable.constraints.ConstraintView;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Usman Aftab (08-0964)
 */
public class EnclosureConstraintView extends ConstraintView {

    HashMap<String , ArrayList<ConstraintMultiValProperty>> properties;

    /** Creates new form EnclosureConstraintView */
    public EnclosureConstraintView(Constraint constraint) {
        super(constraint);
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        operatorComboBox = new javax.swing.JComboBox();
        leftEntityComboBox = new javax.swing.JComboBox();
        entityAttribComboBox = new javax.swing.JComboBox();
        rightEntityComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Operator *");

        jLabel2.setText("Left Entity *");

        jLabel3.setText("Attribute *");

        jLabel4.setText("Right Entity *");

        operatorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        operatorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatorComboBoxActionPerformed(evt);
            }
        });

        leftEntityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        leftEntityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftEntityComboBoxActionPerformed(evt);
            }
        });

        entityAttribComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        entityAttribComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entityAttribComboBoxActionPerformed(evt);
            }
        });

        rightEntityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        rightEntityComboBox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(operatorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rightEntityComboBox, 0, 203, Short.MAX_VALUE)
                            .addComponent(entityAttribComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(leftEntityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(operatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(leftEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(entityAttribComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rightEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

     @Override
    public void init(AppView appView) {
        super.init(appView);

        try {
            ArrayList<ConstraintTypeOperator> operators =
                    ConstraintTypeOperator.getContTypeOperators(getAppView().getSession(), ConstraintType.Enclosure);
            DefaultComboBoxModel model = new DefaultComboBoxModel(operators.toArray());
            operatorComboBox.setModel(model);

            ArrayList<Entity> entities =
                    Entity.getConstraintEntities(getAppView().getSession(), ConstraintType.Enclosure);
            ArrayList<Entity> leftEntityes = Entity.getEntitiesAtPosition(entities, 1);
            ArrayList<Entity> rightEntities = Entity.getEntitiesAtPosition(entities, 2);

            properties = Entity.getAllMultiValProperties(appView.getSession());
            
            model = new DefaultComboBoxModel(leftEntityes.toArray());
            leftEntityComboBox.setModel(model);

            model = new DefaultComboBoxModel(rightEntities.toArray());
            rightEntityComboBox.setModel(model);

        } catch (BasicException ex) {
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER, ex.getMessage(), ex));
        }
    }

    @Override
    public void enableComponents(boolean b) {
        operatorComboBox.setEnabled(b);
        leftEntityComboBox.setEnabled(b);
        entityAttribComboBox.setEnabled(b);
    }

    @Override
    public void changeSelection(business.timetable.constraints.Constraint constraint) {
        setChanging(true);
        business.timetable.constraints.enclosure.EnclosureConstraint enclosureConstraint =
                (business.timetable.constraints.enclosure.EnclosureConstraint) constraint;

        operatorComboBox.setSelectedItem(enclosureConstraint.getConstraintTypeOperator());
        leftEntityComboBox.setSelectedItem(enclosureConstraint.getLeftEntity());
        rightEntityComboBox.setSelectedItem(enclosureConstraint.getRightEntity());
        entityAttribComboBox.setSelectedItem(enclosureConstraint.getAttribName());
        setChanging(false);
    }

     public ConstraintTypeOperator getConstraintTypeOperator() {
        return (ConstraintTypeOperator) operatorComboBox.getSelectedItem();
    }

    public Entity getLeftEntity() {
        return (Entity) leftEntityComboBox.getSelectedItem();
    }

    public Entity getRightEntity() {
        return (Entity) rightEntityComboBox.getSelectedItem();
    }

    public ConstraintMultiValProperty getAttribute() {
        return (ConstraintMultiValProperty) entityAttribComboBox.getSelectedItem();
    }

    private void changeRightEntity(ConstraintMultiValProperty cMultiValp) {
        if(cMultiValp == null){
            rightEntityComboBox.setSelectedIndex(-1);
        } else {
            rightEntityComboBox.setSelectedItem(cMultiValp.getEntity());
        }
    }

    private void changeAttribute() {
        Entity entity = (Entity) leftEntityComboBox.getSelectedItem();
        ArrayList<ConstraintMultiValProperty> cMultiValps = properties.get(entity.getName());
        DefaultComboBoxModel model;
        if(cMultiValps == null){
            model = new DefaultComboBoxModel();
        } else {
            model = new DefaultComboBoxModel(cMultiValps.toArray());
        }
        entityAttribComboBox.setModel(model);
        ConstraintMultiValProperty cMultiValp =
                (ConstraintMultiValProperty) entityAttribComboBox.getSelectedItem();
        changeRightEntity(cMultiValp);
    }

    private void operatorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatorComboBoxActionPerformed
        setDirty(true);
    }//GEN-LAST:event_operatorComboBoxActionPerformed

    private void leftEntityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftEntityComboBoxActionPerformed
        setDirty(true);
        changeAttribute();
    }//GEN-LAST:event_leftEntityComboBoxActionPerformed

    private void entityAttribComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entityAttribComboBoxActionPerformed
        setDirty(true);
        changeRightEntity((ConstraintMultiValProperty) entityAttribComboBox.getSelectedItem());
    }//GEN-LAST:event_entityAttribComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox entityAttribComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox leftEntityComboBox;
    private javax.swing.JComboBox operatorComboBox;
    private javax.swing.JComboBox rightEntityComboBox;
    // End of variables declaration//GEN-END:variables
}
