/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GeneralConstraintView.java
 *
 * Created on Feb 28, 2010, 7:18:02 PM
 */
package gui.timetable.constraints.general;

import business.timetable.Entity;
import business.timetable.constraints.AttributeDType;
import business.timetable.constraints.ConstraintProperty;
import business.timetable.constraints.ConstraintType;
import business.timetable.constraints.ConstraintTypeOperator;
import com.timetable.BasicException;
import com.timetable.gui.JMessageDialog;
import com.timetable.gui.MessageInf;
import gui.timetable.AppView;
import gui.timetable.constraints.Constraint;
import gui.timetable.constraints.ConstraintView;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author Usman Aftab (08-0964)
 */
public class GeneralConstraintView extends ConstraintView {

    HashMap<String, ArrayList<ConstraintProperty>> properties;

    /** Creates new form GeneralConstraintView */
    public GeneralConstraintView(Constraint constraint) {
        super(constraint);

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        operatorComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        leftEntityComboBox = new javax.swing.JComboBox();
        leftEntityAttribComboBox = new javax.swing.JComboBox();
        leftAttribDTypeComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rightAttribDTypeComboBox = new javax.swing.JComboBox();
        rightEntityAttribComboBox = new javax.swing.JComboBox();
        rightEntityComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Operator *");

        operatorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        operatorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatorComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Left Entity *");

        jLabel3.setText("Left Entity Attribute *");

        jLabel4.setText("Left Entity Attribute Type *");

        leftEntityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        leftEntityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftEntityComboBoxActionPerformed(evt);
            }
        });

        leftEntityAttribComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        leftEntityAttribComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftEntityAttribComboBoxActionPerformed(evt);
            }
        });

        leftAttribDTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        leftAttribDTypeComboBox.setEnabled(false);

        jLabel5.setText("Right Entity Attribute *");

        jLabel6.setText("Right Entity *");

        jLabel7.setText("Right Entity Attribute Type *");

        rightAttribDTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        rightAttribDTypeComboBox.setEnabled(false);

        rightEntityAttribComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        rightEntityAttribComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightEntityAttribComboBoxActionPerformed(evt);
            }
        });

        rightEntityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        rightEntityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightEntityComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(leftAttribDTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leftEntityAttribComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(operatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10)
                                .addComponent(leftEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rightEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightAttribDTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightEntityAttribComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(operatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(leftEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rightEntityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(leftEntityAttribComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(leftAttribDTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rightEntityAttribComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rightAttribDTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void init(AppView appView) {
        super.init(appView);

        try {
            ArrayList<ConstraintTypeOperator> operators =
                    ConstraintTypeOperator.getContTypeOperators(getAppView().getSession(), ConstraintType.General);
            DefaultComboBoxModel model = new DefaultComboBoxModel(operators.toArray());
            operatorComboBox.setModel(model);

            ArrayList<Entity> entities =
                    Entity.getConstraintEntities(getAppView().getSession(), ConstraintType.General);
            ArrayList<Entity> leftEntityes = Entity.getEntitiesAtPosition(entities, 1);
            ArrayList<Entity> rightEntities = Entity.getEntitiesAtPosition(entities, 2);

            properties = Entity.getAllProperties(appView.getSession());

            model = new DefaultComboBoxModel(leftEntityes.toArray());
            leftEntityComboBox.setModel(model);

            model = new DefaultComboBoxModel(rightEntities.toArray());
            rightEntityComboBox.setModel(model);

            ArrayList<AttributeDType> attributeDTypes = AttributeDType.getAttributeDTypes(getAppView().getSession());
            model = new DefaultComboBoxModel(attributeDTypes.toArray());
            leftAttribDTypeComboBox.setModel(model);

            model = new DefaultComboBoxModel(attributeDTypes.toArray());
            rightAttribDTypeComboBox.setModel(model);

        } catch (BasicException ex) {
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER, ex.getMessage(), ex));
        }
    }

    @Override
    public void enableComponents(boolean b) {
        operatorComboBox.setEnabled(b);
        leftEntityComboBox.setEnabled(b);
        leftEntityAttribComboBox.setEnabled(b);
        rightEntityComboBox.setEnabled(b);
        rightEntityAttribComboBox.setEnabled(b);
    }

    @Override
    public void changeSelection(business.timetable.constraints.Constraint constraint) {
        setChanging(true);
        business.timetable.constraints.general.GeneralConstraint generalConstraint =
                (business.timetable.constraints.general.GeneralConstraint) constraint;

        operatorComboBox.setSelectedItem(generalConstraint.getConstraintTypeOperator());
        leftEntityComboBox.setSelectedItem(generalConstraint.getLeftEntity());
        changeAttribute(leftEntityAttribComboBox, leftAttribDTypeComboBox
                , (Entity) leftEntityComboBox.getSelectedItem(), generalConstraint.getLeftAttribName());
        rightEntityComboBox.setSelectedItem(generalConstraint.getRightEntity());
        changeAttribute(rightEntityAttribComboBox, rightAttribDTypeComboBox
                , (Entity) rightEntityComboBox.getSelectedItem(), generalConstraint.getRightAttribName());
        setChanging(false);
    }

    public ConstraintTypeOperator getConstraintTypeOperator() {
        return (ConstraintTypeOperator) operatorComboBox.getSelectedItem();
    }

    public Entity getLeftEntity() {
        return (Entity) leftEntityComboBox.getSelectedItem();
    }

    public ConstraintProperty getLeftEntityAttrib() {
        return (ConstraintProperty) leftEntityAttribComboBox.getSelectedItem();
    }

    public Entity getRightEntity() {
        return (Entity) rightEntityComboBox.getSelectedItem();
    }   

    public ConstraintProperty getRightEntityAttrib() {
        return (ConstraintProperty) rightEntityAttribComboBox.getSelectedItem();
    }

    private void changeAttribute(JComboBox attribComboBox, JComboBox attribTypeComboBox, Entity entity) {
        changeAttribute(attribComboBox, attribTypeComboBox, entity, null);
    }

    private void changeAttribute(JComboBox attribComboBox, JComboBox attribTypeComboBox, Entity entity, String attribName) {
        ArrayList<ConstraintProperty> cps = properties.get(entity.getName());
        DefaultComboBoxModel model;
        if (cps == null) {
            model = new DefaultComboBoxModel();
        } else {
            model = new DefaultComboBoxModel(cps.toArray());
        }

        attribComboBox.setModel(model);
        if(attribName != null){
            for(ConstraintProperty cp:cps){
                if(cp.getName().equals(attribName)){
                    attribComboBox.setSelectedItem(cp);
                    break;
                }
            }
        }

        changeAttributeType(attribTypeComboBox, (ConstraintProperty) attribComboBox.getSelectedItem());
    }

    private void changeAttributeType(JComboBox attribTypeComboBox, ConstraintProperty constraintProperty) {
        if (constraintProperty == null) {
            attribTypeComboBox.setSelectedIndex(-1);
        } else {
            attribTypeComboBox.setSelectedItem(constraintProperty.getAttributeDType());
        }
    }

    private void operatorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatorComboBoxActionPerformed
        setDirty(true);
    }//GEN-LAST:event_operatorComboBoxActionPerformed

    private void leftEntityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftEntityComboBoxActionPerformed
        setDirty(true);
        changeAttribute(leftEntityAttribComboBox, leftAttribDTypeComboBox, (Entity) leftEntityComboBox.getSelectedItem());
    }//GEN-LAST:event_leftEntityComboBoxActionPerformed

    private void leftEntityAttribComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftEntityAttribComboBoxActionPerformed
        setDirty(true);
        changeAttributeType(leftAttribDTypeComboBox, (ConstraintProperty) leftEntityAttribComboBox.getSelectedItem());
    }//GEN-LAST:event_leftEntityAttribComboBoxActionPerformed

    private void rightEntityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightEntityComboBoxActionPerformed
        setDirty(true);
        changeAttribute(rightEntityAttribComboBox, rightAttribDTypeComboBox, (Entity) rightEntityComboBox.getSelectedItem());
    }//GEN-LAST:event_rightEntityComboBoxActionPerformed

    private void rightEntityAttribComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightEntityAttribComboBoxActionPerformed
        setDirty(true);
        changeAttributeType(rightAttribDTypeComboBox, (ConstraintProperty) rightEntityAttribComboBox.getSelectedItem());
    }//GEN-LAST:event_rightEntityAttribComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox leftAttribDTypeComboBox;
    private javax.swing.JComboBox leftEntityAttribComboBox;
    private javax.swing.JComboBox leftEntityComboBox;
    private javax.swing.JComboBox operatorComboBox;
    private javax.swing.JComboBox rightAttribDTypeComboBox;
    private javax.swing.JComboBox rightEntityAttribComboBox;
    private javax.swing.JComboBox rightEntityComboBox;
    // End of variables declaration//GEN-END:variables
}
