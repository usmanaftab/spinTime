/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GenerateTT.java
 *
 * Created on Feb 28, 2010, 1:59:24 AM
 */
package gui.timetable;

import business.timetable.ITimeTableGenerator;
import business.timetable.simulatedannealingttg.SimulatedAnnealingTTG;
import com.timetable.gui.JMessageDialog;
import com.timetable.gui.MessageInf;
import java.awt.Cursor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Usman Aftab (08-0964)
 */
public class GenerateTT extends JPanel implements AppPanel, Runnable {

    private Thread thread;
    private boolean isProcessing;
    private ITimeTableGenerator timeTableGenerator;
    private AppView appView;

    /** Creates new form GenerateTT */
    public GenerateTT() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCancelButton = new javax.swing.JButton();
        jGenTimeTableButton = new javax.swing.JButton();
        entityFilter = new gui.timetable.common.EntityFilter();

        setName("Generate Time Table"); // NOI18N

        jCancelButton.setText("Cancel");
        jCancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCancelButtonMouseExited(evt);
            }
        });
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });

        jGenTimeTableButton.setText("Generate Time Table");
        jGenTimeTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGenTimeTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jCancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGenTimeTableButton))
                    .addComponent(entityFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entityFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jGenTimeTableButton)
                    .addComponent(jCancelButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void init(AppView appView) {
        this.appView = appView;
        timeTableGenerator = new SimulatedAnnealingTTG(appView.getSession());
        entityFilter.init(appView);
        setProcessing(false);
    }

    public void run() {
        generateTimeTable();
    }

    @Override
    public AppView getAppView() {
        return appView;
    }

    private void generateTimeTable() {

        if (entityFilter.getDepartments().size() == 0 || entityFilter.getSemester() == null) {
            JOptionPane.showMessageDialog(this, "Please select Semester and Department before proceeding!");
            return;
        }

        setProcessing(true);
        try {
            timeTableGenerator.setDepartments(entityFilter.getDepartments());
            timeTableGenerator.setSemester(entityFilter.getSemester());
            timeTableGenerator.generateTimeTable();
            timeTableGenerator.saveTimeTable();
            timeTableGenerator.generateResults();
            JOptionPane.showMessageDialog(this, "Time Table Generation has been completed successfully", "Complete!.", JOptionPane.PLAIN_MESSAGE);
        } catch (Exception ex) {
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER, ex.getMessage(), ex));
        }
        setProcessing(false);
    }

    private void setProcessing(boolean b) {
        isProcessing = b;
        jCancelButton.setVisible(b);
        jGenTimeTableButton.setEnabled(!b);
        if (b) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        } else {
            setCursor(Cursor.getDefaultCursor());
        }
    }

    public void setTimeTableGenerator(ITimeTableGenerator timeTableGenerator) {
        this.timeTableGenerator = timeTableGenerator;
    }

    private void jCancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCancelButtonMouseEntered
        setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_jCancelButtonMouseEntered

    private void jCancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCancelButtonMouseExited
        if (isProcessing) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        }
}//GEN-LAST:event_jCancelButtonMouseExited

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        thread.stop();
        setProcessing(false);
}//GEN-LAST:event_jCancelButtonActionPerformed

    private void jGenTimeTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGenTimeTableButtonActionPerformed
        thread = new Thread(this);
        thread.start();
}//GEN-LAST:event_jGenTimeTableButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.timetable.common.EntityFilter entityFilter;
    private javax.swing.JButton jCancelButton;
    private javax.swing.JButton jGenTimeTableButton;
    // End of variables declaration//GEN-END:variables

}
