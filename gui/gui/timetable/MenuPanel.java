/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MenuPanel.java
 *
 * Created on Feb 28, 2010, 1:31:56 AM
 */
package gui.timetable;

import com.timetable.config.Config;

/**
 *
 * @author Usman Aftab (08-0964)
 */
public class MenuPanel extends javax.swing.JPanel {

    AppView appView;

    /** Creates new form MenuPanel */
    public MenuPanel() {
        initComponents();
    }

    public void init(AppView appView) {
        this.appView = appView;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateTT = new gui.timetable.MyMenuItem();
        specificConstraint = new gui.timetable.MyMenuItem();
        gapConstraint = new gui.timetable.MyMenuItem();
        limitConstraint = new gui.timetable.MyMenuItem();
        generalConstraint = new gui.timetable.MyMenuItem();
        enclosureConstraint = new gui.timetable.MyMenuItem();
        title = new javax.swing.JLabel();
        migration = new gui.timetable.MyMenuItem();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        generateTT.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        generateTT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generateTT.setText("Generate TimeTable");
        generateTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateTTMouseClicked(evt);
            }
        });

        specificConstraint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        specificConstraint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        specificConstraint.setText("Specific Constraint");
        specificConstraint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                specificConstraintMouseClicked(evt);
            }
        });

        gapConstraint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        gapConstraint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gapConstraint.setText("Gap Constraint");
        gapConstraint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gapConstraintMouseClicked(evt);
            }
        });

        limitConstraint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        limitConstraint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        limitConstraint.setText("Limit Constraint");
        limitConstraint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limitConstraintMouseClicked(evt);
            }
        });

        generalConstraint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        generalConstraint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalConstraint.setText("General Constraint");
        generalConstraint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generalConstraintMouseClicked(evt);
            }
        });

        enclosureConstraint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        enclosureConstraint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enclosureConstraint.setText("Enclosure Constraint");
        enclosureConstraint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enclosureConstraintMouseClicked(evt);
            }
        });

        title.setFont(new java.awt.Font("SansSerif", 1, 18));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Menu");
        title.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, java.awt.Color.darkGray), javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));

        migration.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        migration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        migration.setText("Migration");
        migration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                migrationMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(generateTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specificConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gapConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limitConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generalConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enclosureConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(migration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateTT, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specificConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gapConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limitConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generalConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enclosureConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(migration, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateTTMouseClicked
        String name = Config.getProperty("gui.timetable.GenerateTimeTable");
        appView.setPanel(appView.getPanel(name), name);
    }//GEN-LAST:event_generateTTMouseClicked

    private void specificConstraintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_specificConstraintMouseClicked
        String name = Config.getProperty("gui.timetable.SpecificConstraint");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_specificConstraintMouseClicked

    private void gapConstraintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gapConstraintMouseClicked
        String name = Config.getProperty("gui.timetable.GapConstraint");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_gapConstraintMouseClicked

    private void limitConstraintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limitConstraintMouseClicked
        String name = Config.getProperty("gui.timetable.LimitConstraint");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_limitConstraintMouseClicked

    private void generalConstraintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generalConstraintMouseClicked
        String name = Config.getProperty("gui.timetable.GeneralConstraint");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_generalConstraintMouseClicked

    private void enclosureConstraintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enclosureConstraintMouseClicked
        String name = Config.getProperty("gui.timetable.EnclosureConstraint");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_enclosureConstraintMouseClicked

    private void migrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_migrationMouseClicked
        String name = Config.getProperty("gui.timetable.Migration");
        appView.setPanel(appView.getPanel(name), name);
}//GEN-LAST:event_migrationMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.timetable.MyMenuItem enclosureConstraint;
    private gui.timetable.MyMenuItem gapConstraint;
    private gui.timetable.MyMenuItem generalConstraint;
    private gui.timetable.MyMenuItem generateTT;
    private gui.timetable.MyMenuItem limitConstraint;
    private gui.timetable.MyMenuItem migration;
    private gui.timetable.MyMenuItem specificConstraint;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
