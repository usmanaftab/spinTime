/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Migration.java
 *
 * Created on Jun 19, 2010, 4:01:48 PM
 */
package gui.timetable;

import gui.timetable.common.ExtensionFileFilter;
import business.timetable.migration.excel.ClassRoomMigration;
import business.timetable.migration.excel.CourseMigration;
import business.timetable.migration.excel.DepartmentMigration;
import business.timetable.migration.excel.TeacherMigration;
import business.timetable.migration.excel.TimeSlotMigration;
import business.timetable.representation.Representation;
import gui.timetable.*;
import business.timetable.semester.Semester;
import business.timetable.semester.Semesters;
import com.timetable.BasicException;
import com.timetable.gui.JMessageDialog;
import com.timetable.gui.MessageInf;
import java.awt.Cursor;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Usman Aftab (08-0964)
 */
public class Migration extends javax.swing.JPanel implements AppPanel {

    private AppView appView;
    private Semester semester;
    private ExtensionFileFilter extFileFilter;

    /** Creates new form Migration */
    public Migration() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        semesterTextField = new javax.swing.JTextField();
        mDepartButton = new javax.swing.JButton();
        mCRButton = new javax.swing.JButton();
        mCourseButton = new javax.swing.JButton();
        mTeacherButton = new javax.swing.JButton();
        mTSButton = new javax.swing.JButton();
        deptTextField = new javax.swing.JTextField();
        crTextField = new javax.swing.JTextField();
        tsTextField = new javax.swing.JTextField();
        courseTextField = new javax.swing.JTextField();
        teacherTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        startMigrationButton = new javax.swing.JButton();

        setName("Migration"); // NOI18N

        jLabel1.setText("Semester *");

        mDepartButton.setText("Browse");
        mDepartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDepartButtonActionPerformed(evt);
            }
        });

        mCRButton.setText("Browse");
        mCRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCRButtonActionPerformed(evt);
            }
        });

        mCourseButton.setText("Browse");
        mCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCourseButtonActionPerformed(evt);
            }
        });

        mTeacherButton.setText("Browse");
        mTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTeacherButtonActionPerformed(evt);
            }
        });

        mTSButton.setText("Browse");
        mTSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTSButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Department *");

        jLabel3.setText("Class Room *");

        jLabel4.setText("Timeslot *");

        jLabel5.setText("Teacher *");

        jLabel6.setText("Course *");

        startMigrationButton.setText("Start Migration");
        startMigrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startMigrationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(courseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(teacherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mTeacherButton)
                                    .addComponent(mCRButton)
                                    .addComponent(mDepartButton)
                                    .addComponent(mTSButton)
                                    .addComponent(mCourseButton)))
                            .addComponent(semesterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(startMigrationButton))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(semesterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(deptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mDepartButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(crTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mCRButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(tsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(courseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mCourseButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(teacherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mTeacherButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mTSButton)))
                .addGap(57, 57, 57)
                .addComponent(startMigrationButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void init(AppView appView) {
        this.appView = appView;
        extFileFilter = new ExtensionFileFilter(".xls", "xls");
        jFileChooser.setFileFilter(extFileFilter);
    }

    public AppView getAppView() {
        return appView;
    }

    private boolean validataInputFile() {
        if (deptTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please specify departments' excel file before proceeding!");
            return false;
        }

        if (crTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please specify class rooms' excel file before proceeding!");
            return false;
        }

        if (tsTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please specify time slots' excel file before proceeding!");
            return false;
        }

        if (courseTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please specify courses' excel file before proceeding!");
            return false;
        }

        if (teacherTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please specify teachers' excel file before proceeding!");
            return false;
        }

        return true;
    }

    private boolean validateSemester() throws BasicException {
        if (semesterTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please mention Semester before proceeding!");
            return false;
        }

        String semesterName = semesterTextField.getText();
        semester = Semesters.getByName(appView.getSession(), semesterName);
        if (semester == null) {
            int option = JOptionPane.showConfirmDialog(this, "Semester doesn't exist\nDo you want to create new semester?",
                    "Create new semester?", JOptionPane.YES_NO_OPTION);

            if (option == 0) {
                int ID = Semester.insert(appView.getSession(), semesterName);
                semester = new Semester(ID, semesterName);
                return true;
            } else {
                return false;
            }
        }
        return true;
    }

    private String showFileChooser(String title) {
        jFileChooser.setDialogTitle(title);
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return jFileChooser.getSelectedFile().getAbsolutePath();
        }
        return null;
    }

    private void mDepartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mDepartButtonActionPerformed
        String fileName = showFileChooser("Choose Departments Excel File");
        deptTextField.setText(fileName);
    }//GEN-LAST:event_mDepartButtonActionPerformed

    private void mCRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCRButtonActionPerformed
        String fileName = showFileChooser("Choose Class Rooms Excel File");
        crTextField.setText(fileName);
    }//GEN-LAST:event_mCRButtonActionPerformed

    private void mTSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTSButtonActionPerformed
        String fileName = showFileChooser("Choose Time Slots Excel File");
        tsTextField.setText(fileName);
    }//GEN-LAST:event_mTSButtonActionPerformed

    private void mCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCourseButtonActionPerformed
        String fileName = showFileChooser("Choose Courses Excel File");
        courseTextField.setText(fileName);
    }//GEN-LAST:event_mCourseButtonActionPerformed

    private void mTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTeacherButtonActionPerformed
        String fileName = showFileChooser("Choose Teachers Excel File");
        teacherTextField.setText(fileName);
    }//GEN-LAST:event_mTeacherButtonActionPerformed

    private void startMigrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startMigrationButtonActionPerformed
        try {
            if (!validateSemester()) {
                return;
            }

            int option = JOptionPane.showConfirmDialog(this, "Previous timetables generated for this semester would be removed.\nAre you sure you want to continue?",
                    "Create new semester?", JOptionPane.YES_NO_CANCEL_OPTION);

            if(option != 0)
                return;

            if (!validataInputFile()) {
                return;
            }

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            appView.getSession().beginTransaction();

            Representation.deleteTimeTable(appView.getSession(), semester);

            DepartmentMigration departmentMigration =
                    new DepartmentMigration(appView.getSession(), deptTextField.getText());
            departmentMigration.migrate();

            ClassRoomMigration classRoomMigration =
                    new ClassRoomMigration(appView.getSession(), semester, crTextField.getText());
            classRoomMigration.migrate();

            TimeSlotMigration timeSlotMigration =
                    new TimeSlotMigration(appView.getSession(), semester, tsTextField.getText());
            timeSlotMigration.migrate();

            CourseMigration courseMigration =
                    new CourseMigration(appView.getSession(), semester, courseTextField.getText());
            courseMigration.migrate();

            TeacherMigration teacherMigration =
                    new TeacherMigration(appView.getSession(), semester, teacherTextField.getText());
            teacherMigration.migrate();

            appView.getSession().endTransaction();

            setCursor(Cursor.getDefaultCursor());
            JOptionPane.showMessageDialog(this, "Migration completed successfully!!\nPlease restart for changes to take effect.");
        } catch (Exception ex) {
            try {
                setCursor(Cursor.getDefaultCursor());
                getAppView().getSession().rollBack();
            } catch (BasicException ex1) {
                JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER, ex.getMessage(), ex1));
            }
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER, ex.getMessage(), ex));
        }
    }//GEN-LAST:event_startMigrationButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField courseTextField;
    private javax.swing.JTextField crTextField;
    private javax.swing.JTextField deptTextField;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton mCRButton;
    private javax.swing.JButton mCourseButton;
    private javax.swing.JButton mDepartButton;
    private javax.swing.JButton mTSButton;
    private javax.swing.JButton mTeacherButton;
    private javax.swing.JTextField semesterTextField;
    private javax.swing.JButton startMigrationButton;
    private javax.swing.JTextField teacherTextField;
    private javax.swing.JTextField tsTextField;
    // End of variables declaration//GEN-END:variables
}
